{"version":3,"sources":["webpack:///./node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///./node_modules/react-icons/lib/esm/iconContext.js","webpack:///./node_modules/react-icons/lib/esm/iconBase.js","webpack:///./node_modules/gatsby-theme-blorg/src/hooks/index.ts","webpack:///./node_modules/gatsby-theme-blorg/src/components/avatar.tsx","webpack:///./src/gatsby-theme-blorg/components/bio-content.js","webpack:///./node_modules/gatsby-theme-blorg/src/components/social-links.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/bio.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/html.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/post-meta.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/post-hero.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/post-share.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/post-title.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/gatsby-theme-orga/components/post.js","webpack:///./node_modules/gatsby-theme-blorg/src/components/post.tsx","webpack:///./node_modules/gatsby-theme-orga/src/templates/post-query.js","webpack:///./node_modules/gatsby-theme-blorg/src/components/footer.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/theme-switch.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/header.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/layout.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/seo.tsx","webpack:///./node_modules/gatsby-theme-blorg/src/components/tags.tsx"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","GenIcon","data","props","IconBase","Tree2Element","tree","map","node","tag","key","child","elem","conf","computedSize","title","svgProps","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","useSiteMetadata","useStaticQuery","site","siteMetadata","avatar","fluid","childImageSharp","sx","borderRadius","borderWidth","borderStyle","borderColor","boxShadow","transition","transform","href","social","name","url","mx","bg","toLowerCase","getIcon","flex","justifyContent","flexDirection","HTML","raw","img","maxWidth","maxHeight","dangerouslySetInnerHTML","__html","Info","alignItems","icon","px","info","PostDate","post","flexWrap","pt","Provider","value","verticalAlign","date","wordCount","timeToRead","PostHero","image","alt","imageAlt","excerpt","TweetThisButton","slug","siteUrl","twitter","object","link","text","via","keys","filter","encodeURIComponent","join","as","PostTitle","h1","Post","orgPost","description","imageSource","src","keywords","category","tags","variant","pb","mt","mb","pr","html","mr","to","textAlign","PostPage","author","py","Date","getFullYear","useColorMode","colorMode","setColorMode","onClick","display","textTransform","letterSpacing","border","Layout","header","footer","body","isNamedSlots","root","minHeight","SEO","lang","meta","metaDescription","imageAltText","htmlAttributes","titleTemplate","content","property","concat","defaultProps","Tags","my"],"mappings":"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","file":"component---node-modules-gatsby-theme-orga-src-templates-post-query-js-83d4ed474b09e6492bae.js","sourcesContent":["export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"hi\",\n  \"name\": \"Heroicons\",\n  \"projectUrl\": \"https://github.com/refactoringui/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"si\",\n  \"name\": \"Simple Icons\",\n  \"projectUrl\": \"https://simpleicons.org/\",\n  \"license\": \"CC0 1.0 Universal\",\n  \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n}, {\n  \"id\": \"im\",\n  \"name\": \"IcoMoon Free\",\n  \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"bi\",\n  \"name\": \"BoxIcons\",\n  \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"cg\",\n  \"name\": \"css.gg\",\n  \"projectUrl\": \"https://github.com/astrit/css.gg\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"vsc\",\n  \"name\": \"VS Code Icons\",\n  \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n  \"license\": \"CC BY 4.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import { graphql, useStaticQuery } from \"gatsby\"\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            title\n            author\n            siteUrl\n            description\n            twitter\n            social { name url }\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}\n","/** @jsx jsx */\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport { jsx } from 'theme-ui'\n\nexport default ({\n  width = [80, 120],\n}) => {\n  const {\n    avatar,\n  } = useStaticQuery(graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/avatar.(jpeg|jpg|gif|png)/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 120, maxHeight: 120) {\n          ...GatsbyImageSharpFluid_noBase64\n        }\n      }\n    }\n  }\n  `)\n\n  return (\n    <Image\n      fluid={ avatar.childImageSharp.fluid }\n      sx={{\n        width,\n        borderRadius: '50%',\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: 'text',\n        boxShadow: '0 4px 8px 0 rgba(0,0,0,0.2)',\n        transition: '0.3s',\n        '&:hover': {\n          transform: 'scale(1.1)',\n        }\n      }}/>\n  )\n}\n\n","import React from 'react'\n\nexport default () => (\n  <p>\n  Under active developlent by <a href=\"https://github.com/shroomist\"> shroom</a>.\n  </p>\n)\n","/** @jsx jsx */\nimport {\n  FaEnvelope as EmailIcon, FaGithub as GithubIcon, FaGlobe as WebsiteIcon, FaTwitter as TwitterIcon\n} from 'react-icons/fa'\nimport { Flex, IconButton, jsx, Text } from 'theme-ui'\nimport { useSiteMetadata } from '../hooks'\n\nexport default () => {\n  const { social } = useSiteMetadata()\n\n  const getIcon = (name: string) => {\n    switch (name.toLowerCase()) {\n      case 'twitter': return <TwitterIcon size='1.5em'/>\n      case 'email': return <EmailIcon size='1.5em'/>\n      case 'github': return <GithubIcon size='1.5em'/>\n      case 'website': return <WebsiteIcon size='1.5em'/>\n      default: return <Text>{ name }</Text>\n    }\n  }\n\n  return (\n    <Flex>\n      { social.map(({ name, url }) =>\n        <a key={`social-${name}`} href={url}>\n          <IconButton sx={{\n            mx: 1,\n            '&:hover': { bg: 'highlight' },\n           }}>\n            { getIcon(name) }\n          </IconButton>\n        </a>\n      ) }\n    </Flex>\n  )\n}\n","/** @jsx jsx */\nimport { Box, Flex, jsx } from 'theme-ui'\nimport Avatar from './avatar'\nimport BioContent from \"./bio-content\"\nimport SocialLinks from './social-links'\n\nexport default () => {\n\n  return (\n    <Flex>\n      <Box sx={{ p: 2, flex: '0 0 auto', justifyContent: 'flex-start' }}>\n        <Avatar/>\n      </Box>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <div>\n          <BioContent />\n        </div>\n        <SocialLinks />\n      </Flex>\n    </Flex>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, Box } from 'theme-ui'\n\nexport default function HTML ({ raw }: { raw: string }) {\n  return (\n    <Box sx={{\n      img: { maxWidth: '100%', borderRadius: 2, maxHeight: 500 },\n    }}>\n      <div dangerouslySetInnerHTML={{ __html: raw }}/>\n    </Box>\n  )\n}\n","/** @jsx jsx */\nimport { Flex, Box, Text, jsx } from \"theme-ui\"\nimport {\n  FaCalendar as DateIcon,\n  FaClock as TimeToReadIcon,\n  FaPencilAlt as WordCountIcon,\n} from 'react-icons/fa'\nimport { IconContext } from 'react-icons'\n\nconst Info = ({ children }) => (\n  <Flex sx={{ alignItems: 'center' }}>\n    { children.icon }\n    <Box sx={{ px: 2 }}>{ children.info }</Box>\n  </Flex>\n)\n\nconst PostDate = ({ post }) => (\n  <Flex sx={{ color: 'gray', alignItems: 'center', flexWrap: 'wrap', pt: 2 }}>\n    <IconContext.Provider value={{ style: { verticalAlign: 'middle' } }}>\n      <Info>{{\n          icon: <DateIcon/>,\n          info: post.date\n        }}</Info>\n      <Info>{{\n          icon: <WordCountIcon/>,\n          info: `${post.wordCount} words`\n        }}</Info>\n      <Info>{{\n          icon: <TimeToReadIcon/>,\n          info: `${post.timeToRead} minutes`\n        }}</Info>\n    </IconContext.Provider>\n  </Flex>\n)\n\nexport default PostDate\n","import Image from \"gatsby-image\"\n\nconst PostHero = ({ post }) => (\n  <div>\n    {post?.image?.childImageSharp && (\n      <Image\n        fluid={post.image.childImageSharp.fluid}\n        alt={post.imageAlt ? post.imageAlt : post.excerpt}\n      />\n    )}\n  </div>\n)\n\nexport default PostHero\n","/** @jsx jsx */\nimport { Button, Heading, jsx } from 'theme-ui'\nimport { useSiteMetadata } from '../hooks'\n\nconst objectToGetParams = object => {\n  return '?' + Object.keys(object)\n    .filter(key => !!object[key])\n    .map(key => `${key}=${encodeURIComponent(object[key])}`)\n    .join('&')\n}\n\nconst TweetThisButton = ({ post: { title, slug } }) => {\n  const { siteUrl, twitter } = useSiteMetadata()\n  if (!twitter || twitter.length === 0) return null\n  const link = `https://twitter.com/intent/tweet` + objectToGetParams({\n    text: title,\n    url: `${siteUrl}${slug}`,\n    via: twitter,\n  })\n\n  return (\n    <a href={link}>\n      <Button sx={{\n        width: '100%',\n        px: 2,\n      }}>\n        <Heading as='h3'>Tweet this.</Heading>\n      </Button>\n    </a>\n  )\n}\n\nexport default ({ post }) => (\n  <div>\n    <TweetThisButton post={post}/>\n  </div>\n)\n","import React from \"react\"\nimport { Styled } from \"theme-ui\"\n\nconst PostTitle = (props) => <Styled.h1 {...props} />\n\nexport default PostTitle\n","import Post from '../../components/post'\nexport default Post\n","/** @jsx jsx */\nimport { Link } from 'gatsby'\nimport { Box, Container, Divider, Flex, jsx, Text } from 'theme-ui'\nimport Bio from './bio'\nimport HTML from './html'\nimport Layout from './layout'\nimport PostMeta from './post-meta'\nimport PostHero from './post-hero'\nimport PostShare from './post-share'\nimport PostTitle from './post-title'\nimport { FaTags as TagsIcon } from 'react-icons/fa'\nimport SEO from './seo'\nimport Tags from './tags'\n\nexport default ({ data }) => {\n\n  const post = data.orgPost\n\n  return (\n    <Layout>\n      <SEO\n        title={post.title}\n        description={post.excerpt}\n        imageSource={post.image?.childImageSharp?.fluid.src}\n        keywords={[post.category, ...(post.tags || [])]} />\n      <Container variant='content'>\n        <main sx={{ flex: 1, pb: 4, mx: 'auto' }}>\n          <article>\n            <header sx={{ pb: 1 }}>\n              <PostHero post={post}/>\n              <PostTitle>{post.title}</PostTitle>\n              <Flex sx={{ alignItems: 'center', mt: -4, mb: 3 }}>\n                <Box sx={{ pr: 3 }}>\n                  <PostMeta post={post}/>\n                </Box>\n              </Flex>\n            </header>\n            <section>\n              <HTML raw={post.html} />\n            </section>\n          </article>\n        </main>\n        <Box>\n          <Flex sx={{ alignItems: 'center', justifyContent: 'flex-end' }}>\n            <TagsIcon sx={{ mr: 2 }}/>\n            <Tags tags={post.tags} />\n          </Flex>\n          <Link to={`/${post.category}`}>\n            <Text sx={{ p: 2, textAlign: 'right' }}>\n              Read more stories about \"{post.category}\" ->\n          </Text>\n          </Link>\n          <PostShare post={post}/>\n          <Divider />\n          <Bio />\n        </Box>\n\n      </Container>\n    </Layout>\n  )\n}\n","import { graphql } from 'gatsby'\nimport PostPage from '../components/post'\n\nexport default PostPage\n\nexport const pageQuery = graphql`\nquery PostById($id: String!, $maxWidth: Int) {\n  orgPost(id: { eq: $id }) {\n    title\n    category\n    excerpt\n    date(formatString: \"MMMM DD, YYYY\")\n    tags\n    html\n    slug\n    timeToRead\n    wordCount\n    image {\n      childImageSharp {\n        fluid(maxWidth: $maxWidth) {\n          ...GatsbyImageSharpFluid\n          src\n        }\n      }\n    }\n  }\n}\n`\n","/** @jsx jsx */\nimport { jsx, Box } from 'theme-ui'\nimport { useSiteMetadata } from '../hooks'\n\nexport default () => {\n  const { author } = useSiteMetadata()\n  return (\n    <footer sx={{ py: 5, textAlign: 'center', color: 'gray' }}>\n      <Box>\n        All materials &copy; { `${(new Date()).getFullYear()}` }, { author }.\n      </Box>\n      <Box>\n        Powered by <a href=\"https://orgmode.org\">org-mode</a>, using <a href=\"https://orga.js.org\">orgajs</a> and <a href=\"https://www.gatsbyjs.com\">Gatsby</a>.\n      </Box>\n    </footer>\n\n  )\n}\n","/** @jsx jsx */\nimport { IconButton, jsx, useColorMode } from 'theme-ui'\nimport { FaSun as LightIcon, FaMoon as DarkIcon } from 'react-icons/fa'\nimport { IconContext } from 'react-icons'\n\nexport default () => {\n\n  const [ colorMode, setColorMode ] = useColorMode()\n  return (\n    <IconButton onClick={() => setColorMode(colorMode === 'default' ? 'dark' : 'default')}>\n      <IconContext.Provider value={{\n        size: '1.5em', style: {},\n      }}>\n        { colorMode === 'default' ?\n          <LightIcon/> : <DarkIcon/> }\n      </IconContext.Provider>\n    </IconButton>\n  )\n}\n","/** @jsx jsx */\nimport { Link } from 'gatsby'\nimport { jsx, Text, useColorMode } from 'theme-ui'\nimport ThemeSwitch from './theme-switch'\n\n// const rootPath = `${__PATH_PREFIX__}/`\n\nexport default ({ title }) => {\n\n  return (\n    <header sx={{\n      '@media print': { display: 'none' },\n      display: 'flex',\n      py: 4,\n      justifyContent: 'space-between',\n    }}>\n      <Link to='/'>\n        <Text sx={{\n          px: 3, py: 1,\n          textTransform: 'uppercase',\n          letterSpacing: '0.1em',\n          border: '4px solid',\n        }}>{ title }</Text>\n      </Link>\n      <ThemeSwitch/>\n    </header>\n  )\n}\n","/** @jsx jsx */\nimport { ReactChild } from 'react'\nimport { Container, jsx, Styled } from 'theme-ui'\nimport { useSiteMetadata } from '../hooks'\nimport Footer from './footer'\nimport Header from './header'\n\ntype NamedChildrenSlots = {\n  header?: ReactChild;\n  footer?: ReactChild;\n  body: ReactChild;\n}\n\nconst isNamedSlots = (children: any): children is NamedChildrenSlots => typeof children === 'object' && 'body' in children\n\nconst Layout = ({ children }) => {\n  const { title } = useSiteMetadata()\n\n  let header: ReactChild = <Header title={title}/>\n  let footer: ReactChild = <Footer/>\n  let body = children\n\n  if (isNamedSlots(children)) {\n    header = children.header || header\n    footer = children.footer || footer\n    body = children.body\n  }\n  return (\n    <Styled.root>\n      <Container sx={{\n        p: 3,\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        maxWidth: 900,\n      }}\n      >\n        { header }\n        <div sx={{ display: 'flex', flexDirection: 'column', flex: '1 1 auto' }}>\n          {body}\n        </div>\n        { footer }\n      </Container>\n    </Styled.root>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\n\ninterface Props {\n  title: string;\n  description: string;\n  lang: string;\n  keywords: string[];\n  meta: any;\n  imageSource: string;\n  imageAlt: string;\n}\n\nfunction SEO({ description, lang, meta, keywords, title, imageSource, imageAlt }: Partial<Props>) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  const image = imageSource\n    ? `${site.siteMetadata.siteUrl}${imageSource}`\n    : null\n\n  const imageAltText = imageAlt || metaDescription\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          imageSource\n            ? [\n              {\n                name: `og:image`,\n                content: image,\n              },\n              {\n                name: `og:image:alt`,\n                content: imageAltText,\n              },\n              {\n                name: `twitter:image`,\n                content: image,\n              },\n              {\n                name: `twitter:image:alt`,\n                content: imageAltText,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary_large_image`,\n              },\n            ]\n            : [\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n            ]\n\n        ).concat(\n          keywords.length > 0\n            ? {\n              name: `keywords`,\n              content: keywords.join(`, `),\n            }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/** @jsx jsx */\nimport { Link } from 'gatsby'\nimport { Badge, Flex, jsx, Text } from 'theme-ui'\n\nconst Tags = ({ tags }: { tags: string[] }) => {\n  return (\n    <Flex sx={{ flexWrap: 'wrap', mx: -1, alignItems: 'center' }}>\n      { tags.map(tag =>\n        <Link key={`tag-${tag}`} to={`/:${tag}:`}>\n          <Badge variant='tag' sx={{ mx: 1, my: 1 }}>\n            <Text>{ tag }</Text>\n          </Badge>\n        </Link>\n      ) }\n    </Flex>\n  )\n}\n\nexport default Tags\n"],"sourceRoot":""}